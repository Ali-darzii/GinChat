{
    "swagger": "2.0",
    "info": {
        "description": "This is a Gin chat documentation\nBase URL is in top\nWe_Don't_Know_What_Happened error usually is db error(access issue)",
        "title": "Swagger Example API",
        "contact": {
            "name": "API Support"
        },
        "license": {
            "name": "ali.darzi.1354@gmail.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/auth/": {
            "put": {
                "description": "Authenticates a user and returns a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authenticate"
                ],
                "summary": "check token",
                "parameters": [
                    {
                        "description": "Login details",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GinChat_serializer.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GinChat_serializer.Token"
                        }
                    },
                    "400": {
                        "description": "Object_Not_Found(6) | Token_Expired_Or_Invalid(2) | Name_Field_Required_For_Register(12) | We_Don't_Know_What_Happened(8) | MUST_NOT_AUTHENTICATED(1)",
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "1 min for every request, not authenticated, and returns a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authenticate"
                ],
                "summary": "send token",
                "parameters": [
                    {
                        "description": "Register details",
                        "name": "Register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GinChat_serializer.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.RegisterResponse"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Too_Many_Token_Request(7) | Token_Expired_Or_Invalid(2) | We_Don't_Know_What_Happened(8) | MUST_NOT_AUTHENTICATED(1)",
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chat/get-rooms": {
            "get": {
                "description": "get all pv and gp chats that user have \u0026 need authentication\navatar --\u003e if it's gp will be gp's avatar and if it's pv it will be user in chat avatar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "get all chat rooms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GinChat_serializer.Room"
                        }
                    },
                    "400": {
                        "description": "Token_Expired_Or_Invalid(2) | Object_Not_Found(6)",
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/chat/get-users/": {
            "get": {
                "description": "get all users\nif their have a room in pv chat it will come with it\nthis url need get-users?offset=0\u0026limit=0",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GinChat_serializer.APIUserPagination"
                        }
                    },
                    "400": {
                        "description": "Token_Expired_Or_Invalid(2) | Bad_Format(5)",
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "We_Don't_Know_What_Happened(8)",
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chat/make-group": {
            "post": {
                "description": "create group chat\nsend data in form-data\nall users of group will receive data of created group by websocket (same as creator)\nso on success creator wil receive nil",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "make gp chat",
                "parameters": [
                    {
                        "description": "Message body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.DummyMakeGroupChat"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Token_Expired_Or_Invalid(2) | Object_Not_Found(6) | Bad_Format(5)",
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "We_Don't_Know_What_Happened(8)",
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chat/make-private": {
            "post": {
                "description": "create private chat\nyou need to send 1 message too to create private chat\nit has",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "make pv chat",
                "parameters": [
                    {
                        "description": "Message body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GinChat_serializer.MakeNewChatRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "you're recipient going to receive the response from ws !",
                        "schema": {
                            "$ref": "#/definitions/GinChat_serializer.SendPvMessage"
                        }
                    },
                    "400": {
                        "description": "Token_Expired_Or_Invalid(2) | Object_Not_Found(6) | Bad_Format(5) | We_Don't_Know_What_Happened(8)",
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chat/send-pv-message": {
            "post": {
                "description": "send private chat\n*send data in form-data !\nall users will receive data by websocket (same as api creator)\nso on success creator wil receive nil",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "send pv chat",
                "parameters": [
                    {
                        "description": "Message body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/serializer.PvMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Token_Expired_Or_Invalid(2) | Object_Not_Found(6) | Bad_Format(5)",
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "We_Don't_Know_What_Happened(8)",
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chat/ws": {
            "post": {
                "description": "Sends a chat message to a specific user or group\nit's websocket connection not http post method (swagger doesn't support ws documentation)\ntype is either pv_message or group_message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "connect to websocket and send message",
                "parameters": [
                    {
                        "description": "Message body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.DummyMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GinChat_serializer.SendPvMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user//get-profile/:id/": {
            "get": {
                "description": "get authenticated user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "get user profile",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/serializer.ProfileAPI"
                        }
                    },
                    "400": {
                        "description": "Object_Not_Found(6) | Bad_Format(5)",
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/profile-update/:id/": {
            "get": {
                "description": "send this in form-data\nit has",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "update user profile",
                "parameters": [
                    {
                        "description": "Message body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.DummyProfileUpdate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/GinChat_serializer.UpdatedProfile"
                        }
                    },
                    "400": {
                        "description": "Token_Expired_Or_Invalid(2) | Object_Not_Found(6) | Bad_Format(5) | User_Name_Is_Taken(11)",
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "We_Don't_Know_What_Happened(8)",
                        "schema": {
                            "$ref": "#/definitions/GinChat_utils.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "GinChat_serializer.APIUserPagination": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "next": {
                    "type": "string"
                },
                "previous": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GinChat_serializer.UserInRoom"
                    }
                }
            }
        },
        "GinChat_serializer.LoginRequest": {
            "type": "object",
            "required": [
                "phone_no",
                "token"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "phone_no": {
                    "type": "string"
                },
                "token": {
                    "type": "integer"
                }
            }
        },
        "GinChat_serializer.MakeNewChatRequest": {
            "type": "object",
            "required": [
                "content",
                "recipient_id"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "recipient_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "GinChat_serializer.RegisterRequest": {
            "type": "object",
            "required": [
                "phone_no"
            ],
            "properties": {
                "phone_no": {
                    "type": "string",
                    "maxLength": 11,
                    "minLength": 11
                }
            }
        },
        "GinChat_serializer.Room": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "room_id": {
                    "type": "integer"
                },
                "room_type": {
                    "type": "string"
                },
                "time_stamp": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GinChat_serializer.UserAPI"
                    }
                }
            }
        },
        "GinChat_serializer.SendPvMessage": {
            "type": "object",
            "required": [
                "content",
                "room_id"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "room_id": {
                    "type": "integer"
                },
                "sender": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "GinChat_serializer.Token": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "GinChat_serializer.UpdatedProfile": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "GinChat_serializer.UserAPI": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "GinChat_serializer.UserInRoom": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "room_id": {
                    "type": "integer"
                },
                "time_stamp": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "GinChat_utils.DummyMakeGroupChat": {
            "type": "object",
            "required": [
                "name",
                "recipients_id"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "recipients_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "GinChat_utils.DummyMessage": {
            "type": "object",
            "required": [
                "content",
                "room_id",
                "type"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "room_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "GinChat_utils.DummyProfileUpdate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "GinChat_utils.ErrorResponse": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "error_code": {
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "GinChat_utils.RegisterResponse": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "isSignup": {
                    "type": "boolean"
                }
            }
        },
        "serializer.ProfileAPI": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "serializer.PvMessageRequest": {
            "type": "object"
        }
    },
    "securityDefinitions": {
        "Json Web Token (jwt)": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI"
    }
}